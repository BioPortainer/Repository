{
	"name": "16-GATK",
	"script_path": "conf/scripts/R4.GATK.sh",
	"description": "Toolkit for variant discovery and genotyping. \n Atention: This form is based in a template usage for all the tools. We suggest you select a tool from the list and view its help in order to pass the right arguments.",
	"working_directory": "./",
	"parameters":[
		{
			"name": "Tool",
			"type": "list",
			"values": [
			  "CheckIlluminaDirectory",
			  "CollectIlluminaBasecallingMetrics",
			  "CollectIlluminaLaneMetrics",
			  "ExtractIlluminaBarcodes",
			  "IlluminaBasecallsToFastq",
			  "IlluminaBasecallsToSam",
			  "MarkIlluminaAdapters",
			  "AnnotateIntervals",
			  "CallCopyRatioSegments",
			  "CollectAllelicCountsSpark",
			  "CombineSegmentBreakpoints",
			  "CreateReadCountPanelOfNormals",
			  "DenoiseReadCounts",
			  "DetermineGermlineContigPloidy",
			  "FilterIntervals",
			  "GermlineCNVCaller",
			  "MergeAnnotatedRegions",
			  "MergeAnnotatedRegionsByAnnotation",
			  "ModelSegments",
			  "PlotDenoisedCopyRatios",
			  "PlotModeledSegments",
			  "PostprocessGermlineCNVCalls",
			  "TagGermlineEvents",
			  "ASEReadCounter",
			  "CollectAllelicCounts",
			  "CollectF1R2Counts",
			  "CollectReadCounts",
			  "CountBases",
			  "CountBasesSpark",
			  "CountReads",
			  "CountReadsSpark",
			  "GetPileupSummaries",
			  "Pileup",
			  "PileupSpark",
			  "AccumulateVariantCallingMetrics",
			  "AnalyzeCovariates",
			  "BamIndexStats",
			  "CalcMetadataSpark",
			  "CalculateContamination",
			  "CalculateReadGroupChecksum",
			  "CheckFingerprint",
			  "CheckPileup",
			  "CheckTerminatorBlock",
			  "ClusterCrosscheckMetrics",
			  "CollectAlignmentSummaryMetrics",
			  "CollectBaseDistributionByCycle",
			  "CollectBaseDistributionByCycleSpark",
			  "CollectGcBiasMetrics",
			  "CollectHiSeqXPfFailMetrics",
			  "CollectHsMetrics",
			  "CollectIndependentReplicateMetrics",
			  "CollectInsertSizeMetrics",
			  "CollectInsertSizeMetricsSpark",
			  "CollectJumpingLibraryMetrics",
			  "CollectMultipleMetrics",
			  "CollectMultipleMetricsSpark",
			  "CollectOxoGMetrics",
			  "CollectQualityYieldMetrics",
			  "CollectQualityYieldMetricsSpark",
			  "CollectRawWgsMetrics",
			  "CollectRnaSeqMetrics",
			  "CollectRrbsMetrics",
			  "CollectSamErrorMetrics",
			  "CollectSequencingArtifactMetrics",
			  "CollectTargetedPcrMetrics",
			  "CollectVariantCallingMetrics",
			  "CollectWgsMetrics",
			  "CollectWgsMetricsWithNonZeroCoverage",
			  "CompareBaseQualities",
			  "CompareDuplicatesSpark",
			  "CompareMetrics",
			  "CompareSAMs",
			  "ConvertSequencingArtifactToOxoG",
			  "CrosscheckFingerprints",
			  "CrosscheckReadGroupFingerprints",
			  "EstimateLibraryComplexity",
			  "FlagStat",
			  "FlagStatSpark",
			  "GetSampleName",
			  "IdentifyContaminant",
			  "MeanQualityByCycle",
			  "MeanQualityByCycleSpark",
			  "QualityScoreDistribution",
			  "QualityScoreDistributionSpark",
			  "ValidateSamFile",
			  "ViewSam",
			  "BedToIntervalList",
			  "IntervalListToBed",
			  "IntervalListTools",
			  "LiftOverIntervalList",
			  "PreprocessIntervals",
			  "SplitIntervals",
			  "PathSeqBuildKmers",
			  "PathSeqBuildReferenceTaxonomy",
			  "PathSeqBwaSpark",
			  "PathSeqFilterSpark",
			  "PathSeqPipelineSpark",
			  "PathSeqScoreSpark",
			  "CreateHadoopBamSplittingIndex",
			  "FifoBuffer",
			  "GatherBQSRReports",
			  "GatherTranches",
			  "IndexFeatureFile",
			  "ParallelCopyGCSDirectoryIntoHDFSSpark",
			  "AddCommentsToBam",
			  "AddOrReplaceReadGroups",
			  "AddOriginalAlignmentTags",
			  "ApplyBQSR",
			  "ApplyBQSRSpark",
			  "BQSRPipelineSpark",
			  "BamToBfq",
			  "BaseRecalibrator",
			  "BaseRecalibratorSpark",
			  "BuildBamIndex",
			  "BwaAndMarkDuplicatesPipelineSpark",
			  "BwaSpark",
			  "CleanSam",
			  "ClipReads",
			  "ConvertHeaderlessHadoopBamShardToBam",
			  "DownsampleSam",
			  "ExtractOriginalAlignmentRecordsByNameSpark",
			  "FastqToSam",
			  "FilterSamReads",
			  "FixMateInformation",
			  "FixMisencodedBaseQualityReads",
			  "GatherBamFiles",
			  "LeftAlignIndels",
			  "MarkDuplicates",
			  "MarkDuplicatesSpark",
			  "MarkDuplicatesWithMateCigar",
			  "MergeBamAlignment",
			  "MergeSamFiles",
			  "PositionBasedDownsampleSam",
			  "PrintReads",
			  "PrintReadsSpark",
			  "ReorderSam",
			  "ReplaceSamHeader",
			  "RevertBaseQualityScores",
			  "RevertOriginalBaseQualitiesAndAddMateCigar",
			  "RevertSam",
			  "SamFormatConverter",
			  "SamToFastq",
			  "SamToFastqWithTags",
			  "SetNmAndUqTags",
			  "SetNmMdAndUqTags",
			  "SimpleMarkDuplicatesWithMateCigar",
			  "SortSam",
			  "SortSamSpark",
			  "SplitNCigarReads",
			  "SplitReads",
			  "SplitSamByLibrary",
			  "SplitSamByNumberOfReads",
			  "UmiAwareMarkDuplicatesWithMateCigar",
			  "UnmarkDuplicates",
			  "BaitDesigner",
			  "BwaMemIndexImageCreator",
			  "CreateSequenceDictionary",
			  "ExtractSequences",
			  "FindBadGenomicKmersSpark",
			  "NonNFastaSize",
			  "NormalizeFasta",
			  "ScatterIntervalsByNs",
			  "CombineGVCFs",
			  "GenomicsDBImport",
			  "GenotypeGVCFs",
			  "HaplotypeCaller",
			  "HaplotypeCallerSpark",
			  "LearnReadOrientationModel",
			  "Mutect2",
			  "ReadsPipelineSpark",
			  "CpxVariantReInterpreterSpark",
			  "DiscoverVariantsFromContigAlignmentsSAMSpark",
			  "ExtractSVEvidenceSpark",
			  "FindBreakpointEvidenceSpark",
			  "StructuralVariationDiscoveryPipelineSpark",
			  "SvDiscoverFromLocalAssemblyContigAlignmentsSpark",
			  "AnnotatePairOrientation",
			  "AnnotateVcfWithBamDepth",
			  "AnnotateVcfWithExpectedAlleleFraction",
			  "CalculateGenotypePosteriors",
			  "CalculateMixingFractions",
			  "Concordance",
			  "CountFalsePositives",
			  "CountVariants",
			  "CountVariantsSpark",
			  "EvaluateInfoFieldConcordance",
			  "FilterFuncotations",
			  "FindMendelianViolations",
			  "Funcotator",
			  "FuncotatorDataSourceDownloader",
			  "GenotypeConcordance",
			  "MergeMutect2CallsWithMC3",
			  "ValidateBasicSomaticShortMutations",
			  "ValidateVariants",
			  "VariantEval",
			  "VariantsToTable",
			  "ApplyVQSR",
			  "CNNScoreVariants",
			  "CNNVariantTrain",
			  "CNNVariantWriteTensors",
			  "CreateSomaticPanelOfNormals",
			  "FilterAlignmentArtifacts",
			  "FilterByOrientationBias",
			  "FilterMutectCalls",
			  "FilterVariantTranches",
			  "FilterVcf",
			  "VariantFiltration",
			  "VariantRecalibrator",
			  "FixVcfHeader",
			  "GatherVcfs",
			  "GatherVcfsCloud",
			  "LeftAlignAndTrimVariants",
			  "LiftoverVcf",
			  "MakeSitesOnlyVcf",
			  "MakeVcfSampleNameMap",
			  "MergeVcfs",
			  "PrintVariantsSpark",
			  "RemoveNearbyIndels",
			  "RenameSampleInVcf",
			  "SelectVariants",
			  "SortVcf",
			  "SplitVcfs",
			  "UpdateVCFSequenceDictionary",
			  "UpdateVcfSequenceDictionary",
			  "VariantAnnotator",
			  "VcfFormatConverter",
			  "VcfToIntervalList"
			],
			"description": "Name of the tool to run",
			"required": true
		},
		{
			"name": "Arguments",
			"description": "Type all arguments for using the tools"
		},
		{
			"name": "Config file",
			"param": "--gatk-config-file",
			"description": "Configuration File Specification",
			"type": "file_upload"
		},
		{
			"name": "Spark runner",
			"param": "--spark-runner",
			"description": "Gatk forwards commands to GATK and adds some sugar for submitting spark jobs",
			"type": "list",
			"values": [
			  "LOCAL",
			  "SPARK",
			  "GCS"
			]
		},
		{
			"name": "Java options",
			"param": "--java-options",
			"description": "Pass the given string of options to the java JVM at runtime"
		},
		{
			"name": "Other parameters",
			"description": "Other parameters"
		},
		{
			"name": "Dry run",
			"param": "--dry-run",
			"description": "May be specified to output the generated command line without running it",
			"no_value": true,
			"default": false
		},
		{
			"name": "Help",
			"param": "-h",
			"description": "Generate the help message",
			"no_value": true,
			"default": false
		}
	]
}
