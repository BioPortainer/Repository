{
  "name": "09.03-Deeptools: bamCoverage",
  "script_path": "conf/scripts/bamCoverage.sh",
  "description": "Takes an alignment of reads or fragments as input (BAM file) and generates a coverage track (bigWig or bedGraph) as output. The coverage is calculated as the number of reads per bin, where bins are short consecutive counting windows of a defined size. It is possible to extended the length of the reads to better reflect the actual fragment length. bamCoverage offers normalization by scaling factor, Reads Per Kilobase per Million mapped reads (RPKM), and 1x depth (reads per genome coverage, RPGCe",
  "working_directory": "./",
  "parameters": [
    {
      "name": "BAM input",
      "param": "--bam",
      "required": true,
      "description": "BAM file to process (default: None)"
    },
    {
      "name": "Output",
      "param": "-o",
      "description": "Output file name. (default: None)"
    },
    {
      "name": "Output type",
      "param": "-of",
      "description": "Output file type. Either 'bigwig' or 'bedgraph. default: bigwig)",
      "type": "list",
      "values": [
        "bigwig",
        "bedgraph"
      ]
    },
    {
      "name": "Scale factor",
      "param": " --scaleFactor",
      "description": "The computed scaling factor (or 1, if not applicable) will be multiplied by this"
    },
    {
      "name": "Offset",
      "param": " --Offset",
      "description": "Uses this offset inside of each read as the signal. This is useful in cases like RiboSeq or GROseq, where the signal is 12, 15 or 0 bases past the start of the read. This can be paired with the –filterRNAstrand option. Note that negative values indicate offsets from the end of each read. A value of 1 indicates the first base of the alignment (taking alignment orientation into account). Likewise, a value of -1 is the last base of the alignment. An offset of 0 is not permitted. If two values are specified, then they will be used to specify a range of positions. Note that specifying something like –Offset 5 -1 will result in the 5th through last position being used, which is equivalent to trimming 4 bases from the 5-prime end of alignments. Note that if you specify –centerReads, the centering will be performed before the offset"
    },
    {
      "name": "Filter RNA strand",
      "param": "--filterRNAstrand",
      "type": "list",
      "values": [
        "forward",
        "reverse"  
      ],
      "description": "Selects RNA-seq reads (single-end or paired-end) originating from genes on the given strand. This option assumes a standard dUTP-based library preparation (that is, –filterRNAstrand=forward keeps minus-strand reads, which originally came from genes on the forward strand using a dUTP-based method). Consider using –samExcludeFlag instead for filtering by strand in other contexts"
    },
    {
      "name": "Bin size",
      "param": "-bs",
      "description": "Size of the bins, in bases, for the output of the bigwig/bedgraph file"
    },
    {
      "name": "Region",
      "param": "-r",
      "description": "Region of the genome to limit the operation to - this is useful when testing parameters to reduce the computing time. The format is chr:start:end, for example –region chr10 or –region chr10:456700:891000"
    },
    {
      "name": "Black list",
      "param": "-bl",
      "type": "file_upload",
      "description": "A BED or GTF file containing regions that should be excluded from all analyses. Currently this works by rejecting genomic chunks that happen to overlap an entry. Consequently, for BAM files, if a read partially overlaps a blacklisted region or a fragment spans over it, then the read/fragment might still be considered. Please note that you should adjust the effective genome size, if relevant"
    },
    {
      "name": "Processors",
      "param": "-p",
      "description": "Number of processors to use. Type “max/2” to use half the maximum number of processors or “max” to use all available processors"
    },
    {
      "name": "Eff. genome size",
      "param": "--effectiveGenomeSize",
      "description": "The effective genome size is the portion of the genome that is mappable. Large fractions of the genome are stretches of NNNN that should be discarded. Also, if repetitive regions were not included in the mapping of reads, the effective genome size needs to be adjusted accordingly. A table of values is available here: http://deeptools.readthedocs.io/en/latest/content/feature/effectiveGenomeSize.html"
    },
    {
      "name": "Normalize using",
      "param": "--normalizeUsing",
      "type": "list",
      "values": [
        "RPKM",
        "CPM", 
        "BPM",
        "RPGC",
        "None"
    ],
      "description": "Use one of the entered methods to normalize the number of reads per bin. By default, no normalization is performed. RPKM = Reads Per Kilobase per Million mapped reads; CPM = Counts Per Million mapped reads, same as CPM in RNA-seq; BPM = Bins Per Million mapped reads, same as TPM in RNA-seq; RPGC = reads per genomic content (1x normalization); Mapped reads are considered after blacklist filtering (if applied). RPKM (per bin) = number of reads per bin / (number of mapped reads (in millions) * bin length (kb)). CPM (per bin) = number of reads per bin / number of mapped reads (in millions). BPM (per bin) = number of reads per bin / sum of all reads per bin (in millions). RPGC (per bin) = number of reads per bin / scaling factor for 1x average coverage. None = the default and equivalent to not setting this option at all. This scaling factor, in turn, is determined from the sequencing depth: (total number of mapped reads * fragment length) / effective genome size. The scaling factor used is the inverse of the sequencing depth computed for the sample to match the 1x coverage. This option requires –effectiveGenomeSize. Each read is considered independently, if you want to only count one mate from a pair in paired-end data, then use the –samFlagInclude/–samFlagExclude options"
    },
    {
      "name": "Ignore for normalization",
      "param": "-ignore",
      "type": "file_upload",
      "description": "A list of space-delimited chromosome names containing those chromosomes that should be excluded for computing the normalization. This is useful when considering samples with unequal coverage across chromosomes, like male samples. An usage examples is –ignoreForNormalization chrX chrM"
    },
    {
      "name": "Smooth length",
      "param": "--smoothLength",
      "description": "The smooth length defines a window, larger than the binSize, to average the number of reads. For example, if the –binSize is set to 20 and the –smoothLength is set to 60, then, for each bin, the average of the bin and its left and right neighbors is considered. Any value smaller than –binSize will be ignored and no smoothing will be applied"
    },
    {
      "name": "Min mapping quality",
      "param": "--minMappingQuality",
      "description": "If set, only reads that have a mapping quality score of at least this are considered"
    },
    {
      "name": "Sam flag include",
      "param": "--samFlagInclude",
      "description": "Include reads based on the SAM flag. For example, to get only reads that are the first mate, use a flag of 64. This is useful to count properly paired reads only once, as otherwise the second mate will be also considered for the coverage"
    },
    {
      "name": "Sam flag exclude",
      "param": "--samFlagExclude",
      "description": "Include reads based on the SAM flag. For example, to get only reads that are the first mate, use a flag of 64. This is useful to count properly paired reads only once, as otherwise the second mate will be also considered for the coverage"
    },
    {
      "name": "Min fragment length",
      "param": "--minFragmentLength",
      "description": "The minimum fragment length needed for read/pair inclusion. This option is primarily useful in ATACseq experiments, for filtering mono- or di-nucleosome fragments"
    },
    {
      "name": "Max fragment length",
      "param": "--maxFragmentLength",
      "description": "The maximum fragment length needed for read/pair inclusion"
    },
    {
      "name": "Other parameters",
      "description": "Other parameters"
    },
    {
      "name": "MNase",
      "param": " --MNase",
      "description": "Determine nucleosome positions from MNase-seq data. Only 3 nucleotides at the center of each fragment are counted. The fragment ends are defined by the two mate reads. Only fragment lengths between 130 - 200 bp are considered to avoid dinucleosomes or other artifacts. By default, any fragments smaller or larger than this are ignored. To over-ride this, use the –minFragmentLength and –maxFragmentLength options, which will default to 130 and 200 if not otherwise specified in the presence of –MNase. NOTE: Requires paired-end data. A bin size of 1 is recommended",
      "no_value": true,
      "default": false
    },
    {
      "name": "Verbose",
      "param": "-v",
      "description": "Set to see processing messages",
      "no_value": true,
      "default": false
    },
    {
      "name": "Exact scaling",
      "param": "--exactScaling",
      "no_value": true,
      "default": false,
      "description": "Instead of computing scaling factors based on a sampling of the reads, process all of the reads to determine the exact number that will be used in the output. This requires significantly more time to compute, but will produce more accurate scaling factors in cases where alignments that are being filtered are rare and lumped together. In other words, this is only needed when region-based sampling is expected to produce incorrect results"
    },
    {
      "name": "Skip non covered regions",
      "param": "--skipNAs",
      "description": "This parameter determines if non-covered regions (regions without overlapping reads) in a BAM file should be skipped. The default is to treat those regions as having a value of zero. The decision to skip non-covered regions depends on the interpretation of the data. Non-covered regions may represent, for example, repetitive regions that should be skipped",
      "no_value": true,
      "default": false
    },
    {
      "name": "Extend reads",
      "param": "-e",
      "description": "This parameter allows the extension of reads to fragment size. If set, each read is extended, without exception. NOTE: This feature is generally NOT recommended for spliced-read data, such as RNA-seq, as it would extend reads over skipped regions. Single-end: Requires a user specified value for the final fragment length. Reads that already exceed this fragment length will not be extended. Paired-end: Reads with mates are always extended to match the fragment size defined by the two read mates. Unmated reads, mate reads that map too far apart (>4x fragment length) or even map to different chromosomes are treated like single-end reads. The input of a fragment length value is optional. If no value is specified, it is estimated from the data (mean of the fragment size of all mate reads)",
      "no_value": true,
      "default": false
    },
    {
      "name": "Ignore duplicates",
      "param": "--ignoreDuplicates",
      "description": "If set, reads that have the same orientation and start position will be considered only once. If reads are paired, the mate’s position also has to coincide to ignore a read",
      "no_value": true,
      "default": false
    },
    {
      "name": "Center reads",
      "param": "--centerReads",
      "description": "By adding this option, reads are centered with respect to the fragment length. For paired-end data, the read is centered at the fragment length defined by the two ends of the fragment. For single-end data, the given fragment length is used. This option is useful to get a sharper signal around enriched regions",
      "no_value": true,
      "default": false
    },
    {
      "name": "Help",
      "param": "--help",
      "description": "Help",
      "no_value": true,
      "default": false
    }
  ]
}
